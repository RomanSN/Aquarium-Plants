@using PagedList.Mvc;
@using PagedList;


@model AquaMarket.Models.ArticleViewModel

@{
    ViewBag.Title = "Articles";
}

<div class="partial_Lable catalogue">
    <div class="container-fluid catalogue_header">

        <h2>@Model.Section</h2>
        <hr />



        <div class="row pagesizer_sections">
            <div class="col-md-4">
               

                @using (Html.BeginForm("Details", "Articles", FormMethod.Get, new { @class = "navbar-form" }))
                {
                <div class="input-group ">

                    <input name="Id" id="ArticleId" type="hidden" value="{ id = Id }">
                    <input id="article_search" type="text" class="form-control" placeholder="Start type article title" value="">
                    <div class="input-group-btn">
                        <button class="btn btn-default " type="submit">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </div>
                </div>
                }
            </div>

            <div class="col-md-4 list_pager">
                @Html.PagedListPager((IPagedList)Model.Articles, page => Url.Action("Index", new { pageInd = page, Section = Model.Section }))
            </div>

            <div class="col-md-4 create_button">
                <!--A button created by html-->
                <div id="create_new_article">
                    <a href="/Articles/Create" class="btn btn-info" role="button">Add article</a>
                </div>
            </div>
        </div>
    </div>


    @foreach (var item in Model.Articles)
    {
        <div class="row article_Item container-fluid">
            <div>
                <h4>@item.Title</h4>
                <hr />
            </div>
            <div class="col-md-4 container">

                @if (item.File != null)
                {
                    <div>
                        <a href="@Url.Content("~/Files/" + item.File.FileName)">
                            <img src="@Url.Content("~/Files/" + item.File.FileName)" alt="Article image">
                        </a>
                    </div>
                }
                <div>
                    <!--A button created by html helper-->
                    @Html.ActionLink("Read article", "Details", new { id = item.Id }, new { @class = "btn btn-info", role = "button" })
                </div>
            </div>

            <div class="col-md-8">
                <div>
                    @Html.DisplayFor(modelItem => item.Content)
                </div>
            </div>

        </div>
    }
</div>
