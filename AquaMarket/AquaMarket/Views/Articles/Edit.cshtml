@model AquaMarket.Models.Article

@{
    ViewBag.Title = "Edit";
}

<div id="edit_page" class="partial_Lable partial_content">

    <h2>Edit</h2>
    <hr />

    @using (Html.BeginForm("Edit", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Likes)
        @Html.HiddenFor(model => model.FileId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Section, Model.Sections as SelectList, Model.Section, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 20, cols = 260 })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="file" class="form-group">
            @if (Model.File != null)
            {
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <a href="@Url.Content("~/Files/" + Model.File.FileName)"></a>
                    <img src="@Url.Content("~/Files/" + Model.File.FileName)" width="200" alt="Plant image">
                    @Ajax.ActionLink("Change image", "DeleteFileConfirmed", new { fileId = Model.File.Id }, new AjaxOptions { UpdateTargetId = "file", Confirm = "This image will be deleted, continue?" }, new { @class = "btn btn-danger" })

                </div>
            }
            else
            {
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" accept="image/*" name="Image" /><br>
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            }
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-success" /> |

            @Html.ActionLink("Back", null, null, new { @class = "btn btn-default", role = "button", href = Request.UrlReferrer })
        </div>
    </div>
    }
</div>