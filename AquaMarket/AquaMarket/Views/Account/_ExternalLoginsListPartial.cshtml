@model AquaMarket.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Use a different service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                External authentication services are not configured. For details on configuring login through external service for this application ASP.NET
                see in <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <div style="text-align:center">
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        switch (p.AuthenticationType)
                        {
                            case "Facebook":
                                <button type="submit" class="btn btn-block btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in with your account @p.Caption">
                                    <span class="fa fa-facebook"></span>@p.AuthenticationType
                                </button>
                                break;
                            case "Google":
                                <button type="submit" class="btn btn-block btn-social btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in with your account @p.Caption">
                                    <span class="fa fa-google"></span>@p.AuthenticationType
                                </button>
                                break;
                            case "Microsoft":
                                <button type="submit" class="btn btn-block btn-social btn-microsoft" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in with your account @p.Caption">
                                    <span class="fa fa-windows"></span>@p.AuthenticationType
                                </button>
                                break;
                            case "Instagram":
                                <button type="submit" class="btn btn-block btn-social btn-instagram" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in with your account @p.Caption">
                                    <span class="fa fa-instagram"></span>@p.AuthenticationType
                                </button>
                                break;
                            default:
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in with your account @p.Caption">@p.AuthenticationType</button>
                                break;
                        }
                        if (@p.AuthenticationType.Contains(""))
                        {

                        }

                    }
                </div>
            </div>
        }
    }
}
